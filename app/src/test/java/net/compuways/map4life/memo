         //When user requests system keywords reload or new installation
                if (SP.getString("syskwreload", "NO").equalsIgnoreCase("YES")) {
                    DatabaseHandler db = new DatabaseHandler(getActivity());
                    db.deleteKeywordByType("0");
                    initiateDB(db);
                    SP.edit().putString("syskwreload", "NO").commit(); // set to default no reload
                    List<Keyword> allkeywords = db.getAllKeywords();
                    for (Keyword kw : allkeywords) {
                        adapter.addItem(kw);

                    }
                    db.close();
                }
                SC0677287
------------------------
 //When user requests system keywords reload or new installation
        if (SP.getString("syskwreload", "XXX").equalsIgnoreCase("YES") ||SP.getString("syskwreload", "XXX").equalsIgnoreCase("XXX") ) {
            DatabaseHandler db = new DatabaseHandler(this);
            db.deleteKeywordByType("0");
            mf.initiateDB(db);
            SP.edit().putString("syskwreload", "NO").commit(); // set to default no reload
            List<Keyword> allkeywords = db.getAllKeywords();
            for (Keyword kw : allkeywords) {
                mf.addItem(kw);

            }
            db.close();

        }else
            mf.addItem((new Keyword(0,"TEST",0)));



-----------------
        // messageView.setRotation(-90f);
             // System.out.println("land1=" + messageView.getTextSize());


       System.out.println(country + "   " + state + "   " + localcity);
     // DatabaseHandler db = new DatabaseHandler(getActivity());
  System.out.println("sid=" + sourceID+ "  kw=" + keywordValue + ",  country=" + country);
    //    Intent intent = new Intent(Intent.ACTION_SEARCH);
            //     intent.putExtra(SearchManager.QUERY, keywordValue);
            //     if (intent.resolveActivity(getActivity().getPackageManager()) != null) {
             //        startActivity(intent);
             //    }

 -----------------------------
  ArrayList<HashMap<String,Object>> items =new ArrayList<HashMap<String,Object>>();
PackageManager pm;
final PackageManager pm = getPackageManager();
List<PackageInfo> packs = pm.getInstalledPackages(0);
for (PackageInfo pi : packs) {
if( pi.packageName.toString().toLowerCase().contains("calcul")){
    HashMap<String, Object> map = new HashMap<String, Object>();
    map.put("appName", pi.applicationInfo.loadLabel(pm));
    map.put("packageName", pi.packageName);
    items.add(map);
 }
}
-------------------------------------
        final int gravity = messageView.getGravity();
        if (Gravity.isVertical(gravity)) {
            //  setGravity((gravity&Gravity.HORIZONTAL_GRAVITY_MASK) | Gravity.TOP);
            System.out.println("SourceDID=" + sourceID+"  "+message);
        } else {
            System.out.println("SourceID=" + sourceID);
        }

    ============================
     Toolbar toolbar = (Toolbar) view.findViewById(R.id.toolbar);
        AppCompatActivity activity = (AppCompatActivity) getActivity();
        activity.setSupportActionBar(toolbar);
         ActionBar acb=activity.getSupportActionBar();
         if(acb!=null) acb.setDisplayHomeAsUpEnabled(true);

    ======================================
      @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        AppCompatActivity activity = (AppCompatActivity) getActivity();
        activity.getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        switch(id){
            case R.id.action_settings:
                return true;
            case R.id.action_edit:
                editOP();
                return true;
            case R.id.action_source:

                CharSequence colors[] =
                        new CharSequence[] {getString(R.string.googlemap),
                                getString(R.string.yellowpage),
                                getString(R.string.googlesearch),
                                getString(R.string.ebay),
                                getString(R.string.amazon),
                                getString(R.string.costco),
                                getString(R.string.weather)};

                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                builder.setTitle("Select a source");
                builder.setItems(colors, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                        setSourceID(which);

                        if(which==6){
                            weatherOP();
                            return;
                        }
                    }
                });
                builder.show();

                return true;
            case R.id.action_local:
                getHomeOP();
                return true;
            default:
                return super.onOptionsItemSelected(item);

        }


    }
    ============================
     @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        switch(id){
            case R.id.action_settings:
                return true;
            case R.id.action_edit:
                mf.editOP();
                return true;
            case R.id.action_source:

                CharSequence colors[] =
                        new CharSequence[] {getString(R.string.googlemap),
                                getString(R.string.yellowpage),
                                getString(R.string.googlesearch),
                                getString(R.string.ebay),
                                getString(R.string.amazon),
                                getString(R.string.costco),
                                getString(R.string.weather)};

                AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
                builder.setTitle("Select a source");
                builder.setItems(colors, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                        mf.setSourceID(which);

                        if(which==6){
                            mf.weatherOP();
                            return;
                        }
                    }
                });
                builder.show();

                return true;
            case R.id.action_local:
                mf.getHomeOP();
                return true;
            default:
                return super.onOptionsItemSelected(item);

        }


    }


------------------------------
   private OnItemClickListener spinnerListener = new OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView<?> parent, final View view,
                                int position, long id) {

            if (position == 6) {

                weatherOP();

                if (intent == null) {
                    return;
                } else {
                    startActivity(intent);
                }
            }
        }
    };

---------------------
 // @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        AppCompatActivity activity = (AppCompatActivity) getActivity();
        activity.getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        switch(id){
            case R.id.action_settings:
                return true;
            case R.id.action_edit:
                editOP();
                return true;
            case R.id.action_source:

                CharSequence colors[] =
                        new CharSequence[] {getString(R.string.googlemap),
                                getString(R.string.yellowpage),
                                getString(R.string.googlesearch),
                                getString(R.string.ebay),
                                getString(R.string.amazon),
                                getString(R.string.costco),
                                getString(R.string.weather)};

                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                builder.setTitle("Select a source");
                builder.setItems(colors, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                        setSourceID(which);

                        if(which==6){
                            weatherOP();
                            return;
                        }
                    }
                });
                builder.show();

                return true;
            case R.id.action_local:
                getHomeOP();
                return true;
            default:
                return super.onOptionsItemSelected(item);

        }


    }

++++++++++++++++++++++

    *Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
    *
    *
    *

    private void radiover(){
        for (PlaceLikelihood placeLikelihood : likelyPlaces) {
            Place p = placeLikelihood.getPlace();
            String[] add=p.getAddress().toString().split(",");
            if(add==null || add.length<3){
                continue;
            }
            String country=add[add.length-1];
            String state=add[add.length-2];
            String city=add[add.length-3];
            if(city.indexOf(" ")>0){
                city=city.replace(" ","%20");
            }

            System.out.println(city+"   "+state+"   "+country);
            Uri uri=null;
            Intent intent=null;
            if(radiomap.isChecked()) {
                localLL = p.getLatLng();
                uri = Uri.parse("geo:" + localLL.latitude + "," + localLL.longitude + "?q=" + keyword);
                intent = new Intent(Intent.ACTION_VIEW, uri);
                intent.setPackage("com.google.android.apps.maps");
            }else if(radioSearch.isChecked()){
                uri = Uri.parse("http://www.google.com/#q="+keyword);
                intent = new Intent(Intent.ACTION_VIEW, uri);
            }else if(radioYellowpage.isChecked()){

                if(!country.equalsIgnoreCase("Canada")) {
                    uri = Uri.parse("http://www.yellowpages.ca/search/si/1/" + keyword + "/" + city + "%2c" + state);
                    intent = new Intent(Intent.ACTION_VIEW, uri);
                    System.out.println(state);
                }else{
                    System.out.println(country);
                }
            }

            if(intent==null){
                continue;
            }else {
                startActivity(intent);
            }

            break;

        }
        likelyPlaces.release(
    }
